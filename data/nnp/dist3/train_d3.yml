---
    atom_types:
      H:  { r1: 1, r2: 0, r3: 0 , g1: 1, g4: 0, g5: 0, g6: 0, g7: 0 }
      C:  { r1: 0, r2: 1, r3: 0 , g1: 0, g4: 1, g5: 0, g6: 0, g7: 0 }
      N:  { r1: 0, r2: 1, r3: 0 , g1: 0, g4: 0, g5: 1, g6: 0, g7: 0 }
      O:  { r1: 0, r2: 1, r3: 0 , g1: 0, g4: 0, g5: 0, g6: 1, g7: 0 }
      F:  { r1: 0, r2: 1, r3: 0 , g1: 0, g4: 0, g5: 0, g6: 0, g7: 1 }
      S:  { r1: 0, r2: 0, r3: 1 , g1: 0, g4: 0, g5: 0, g6: 1, g7: 0 }
      Cl: { r1: 0, r2: 0, r3: 1 , g1: 0, g4: 0, g5: 0, g6: 0, g7: 1 }
      
    atom_embedding:
        normalization:
            vdw_radius:   {avg: 1.59, sigma: 0.22}
            e_negativity: {avg: 3.02, sigma: 0.67}

    trainData: 
        type:             ANI-2_201910
        pickleFile:       $smdd_dir/CDD/projects/ml_qm/DataSets/ANI-2x_dataset/20191001/ani2_5.pickle.dist.gz
        batchPickleFile:  $smdd_dir/CDD/projects/ml_qm/DataSets/ANI-2x_dataset/20191001/ani2_5.distNet.distPad2
        dataDir:          "$smdd_dir/CDD/projects/ml_qm/DataSets/ANI-2x_dataset/20191001/"
        iFile:            "ani2x-20191001_lean.h5"
        seed:             42424242
        trainFraction:    0.8
        valFraction:      0.2
        testFraction:     0
        atomizationERange: [-300,400]
        maxEnergy_kcal:    999999          # for testset only
        skipFactor:       1
        batch.dropLast:   false

    padding:
        # bad atoms with key nubmer of atoms to value number of atoms
        # hoping to speedup
        ang_neighbors: { 2: 7, 3: 7, 4: 7, 5: 7, 6: 7,
                         15: 16,
                         17: 18, 19: 21, 20: 21,
                         22: 23, 24: 25, 26: 27, 28: 29, 30: 31, 32: 33, 34: 37, 35: 37, 36: 37 }

        # if conkSizes are >= the total size of the data memory allocation will be optimal
    confChunkSize:    1000
    atomChunkSize:    10000
    atomMapChunkSize: 10000
    pairChunkSize:    10000
    
    energyNet:
        layers:
            - 
                nodes: 1381
                activation: {type: Mish}
                batchNorm:  {}
                dropOutPct: 6
                bias: false
            - 
                nodes: 249
                activation: {type: Mish}
                batchNorm:  {}
                dropOutPct: 0
                bias: false
            - 
                nodes: 231
                activation: {type: Mish}
                batchNorm:  {}
                dropOutPct: 2
                bias: false
            -
                nodes: 419
                activation: {type: Mish}
                batchNorm:  null
                dropOutPct: 0
                bias: false
            - 
                nodes: 66
                activation: {type: CELU}
                batchNorm:  null
                dropOutPct: 7
                bias: false
            - 
                nodes: 1
                dropOutPct: 0
                bias: true

    radialNet:
        radialCutoff:  5.2
        addSquare: false
        addReciproce: true
    
        layers:
            - 
                nodes: 32
                activation: {type: CELU}
                batchNorm:  null
                dropOutPct: 0
                bias: true
                initBias: {method: uniform, param: [ 0, 4.9 ]}
            - 
                nodes: 37
                activation: {type: CELU}
                batchNorm:  null
                dropOutPct: 2
                bias: true

    angleNet:
        angularCutoff: 3.8
        angleDescriptor: angle
    
        layers:
            - 
                nodes: 97
                activation: {type: Gaussian}
                batchNorm:  null
                dropOutPct: 0
                bias: true
                initBias: {method: uniform, param: [ 0, 3]}
            - 
                nodes: 464
                activation: {type: Mish}
                batchNorm:  null
                dropOutPct: 0
                bias: true
                
    loss:             SmoothL1Loss
    lossParam:        { }
    
    optType:          Ranger
    optParam:         { lr: 0.001, k: 7, eps: 0.00001, weight_decay: 0.003 }
    scheduler:        CombinedScheduler
    schedulerParam:   { conf: {
                         0:   { scheduler: StepLR, schedulerParam: { step_size: 1, gamma: 2 }},
                         4:   { scheduler: StepLR, schedulerParam: { step_size: 100, gamma: 0 }},
                         50:  { scheduler: CosineLRWithRestarts, schedulerParam: { batch_size: 512, epoch_size: 3600384, restart_period: 5, t_mult: 1.2, verbose: true  }}}}

    gradientClippingMaxNorm: 0.3
    
    batchSize:        512
    epochs:           800
    maxNoImprovementEpochs: 300
